package stall.demo;

/*
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

import javax.swing.UIManager; // import in the lib folder swing-layout-1.0.4.jar

/**
 * Demo for sending four blocking calls to the internal server. Created with
 * NetBeans. The form for altering with NetBeans is in the NetBeans folder.
 */
public class TyDemoInternalTest extends javax.swing.JFrame {
       
  private static final long serialVersionUID = 1L;

    /** Creates new form TyDemoInternal */
    public TyDemoInternalTest() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        StopServer = new javax.swing.JButton();
        StartServer = new javax.swing.JButton();
        SendSingle = new javax.swing.JButton();
        OpenMenu = new javax.swing.JButton();
        CloseMenu = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ResultText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(java.util.ResourceBundle.getBundle("stall/demo/TyDemoInternalTestProperties").getString("Tymeac_Internal_Server_Test"));
        StopServer.setText(java.util.ResourceBundle.getBundle("stall/demo/TyDemoInternalTestProperties").getString("Stop_Server"));
        StopServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StopServerActionPerformed(evt);
            }
        });

        StartServer.setText(java.util.ResourceBundle.getBundle("stall/demo/TyDemoInternalTestProperties").getString("Start_Server"));
        StartServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartServerActionPerformed(evt);
            }
        });

        SendSingle.setText(java.util.ResourceBundle.getBundle("stall/demo/TyDemoInternalTestProperties").getString("Send_Single"));
        SendSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendSingleActionPerformed(evt);
            }
        });

        OpenMenu.setText(java.util.ResourceBundle.getBundle("stall/demo/TyDemoInternalTestProperties").getString("Open_Menu"));
        OpenMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenMenuActionPerformed(evt);
            }
        });

        CloseMenu.setText(java.util.ResourceBundle.getBundle("stall/demo/TyDemoInternalTestProperties").getString("Close_Menu"));
        CloseMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseMenuActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText(java.util.ResourceBundle.getBundle("stall/demo/TyDemoInternalTestProperties").getString("Result:"));

        ResultText.setFont(new java.awt.Font("Tahoma", 0, 12));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(StartServer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(58, 58, 58)
                        .add(SendSingle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(114, 114, 114)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(CloseMenu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(OpenMenu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(StopServer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(19, 19, 19)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(ResultText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(StartServer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(20, 20, 20)
                .add(SendSingle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(26, 26, 26)
                .add(OpenMenu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30)
                .add(CloseMenu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(31, 31, 31)
                .add(StopServer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(33, 33, 33)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(ResultText, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .add(20, 20, 20))
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
     @SuppressWarnings("unused")
    private void StopServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StopServerActionPerformed
// TODO add your handling code here:
        
        try {
          // stopButton 			
          if  (TyDemoInternalTestBean21 == null) {
	
	      ResultText.setText("Start the server first");
	  } 
	  else {
	      ResultText.setText(TyDemoInternalTestBean21.stopServer());
              
    	  } // endif

        } catch (java.lang.Exception e) {
	}
        
    }//GEN-LAST:event_StopServerActionPerformed
      @SuppressWarnings("unused")
    private void CloseMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseMenuActionPerformed
// TODO add your handling code here:
        
        try {
            // closeButton 
            if  (TyDemoInternalTestBean21 == null) {

                ResultText.setText("Start the server first");
            } 
            else {
                TyDemoInternalTestBean21.closeMenu();
            } // endif

        } catch (java.lang.Exception e) {
        }
    }//GEN-LAST:event_CloseMenuActionPerformed
     @SuppressWarnings("unused")
    private void OpenMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenMenuActionPerformed
// TODO add your handling code here:
        
        try {
      	  // openButton 
      	  if  (TyDemoInternalTestBean21 == null) {
      	
                    ResultText.setText("Start the server first");
                } 
      	  else {
      	      TyDemoInternalTestBean21.openMenu();
                    
          	} // endif
      
      	} catch (java.lang.Exception e) {
      	}
        
    }//GEN-LAST:event_OpenMenuActionPerformed
      @SuppressWarnings("unused")
    private void SendSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendSingleActionPerformed
// TODO add your handling code here:
        
        try {
      	  // sendButton 
      	  if  (TyDemoInternalTestBean21 == null) {
      	
      	      ResultText.setText("Start the server first");
      	  } 
      	  else {
      	      ResultText.setText(TyDemoInternalTestBean21.sendSingle());
                    
          	  } // endif
      
      	} catch (java.lang.Exception e) {
      	}      
        
    }//GEN-LAST:event_SendSingleActionPerformed
       @SuppressWarnings("unused")
    private void StartServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartServerActionPerformed
// TODO add your handling code here:
        
          try {
            if  (TyDemoInternalTestBean21 == null) {

                TyDemoInternalTestBean21 = new TyDemoInternalTestBean();

            } // endif

            if  (TyDemoInternalTestBean21.startServer() == null) {

                ResultText.setText("Starting the server failed");

            } // endif  

	  } catch (java.lang.Exception e) {
	  }
        
        
    }//GEN-LAST:event_StartServerActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
      try {
        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      } 
      catch (Exception e) { 
      }
      
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TyDemoInternalTest().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CloseMenu;
    private javax.swing.JButton OpenMenu;
    private javax.swing.JTextField ResultText;
    private javax.swing.JButton SendSingle;
    private javax.swing.JButton StartServer;
    private javax.swing.JButton StopServer;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
    
    TyDemoInternalTestBean TyDemoInternalTestBean21 = null;
}
